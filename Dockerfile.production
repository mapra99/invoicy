# gets the docker image of ruby 3.1.2 and lets us build on top of that
FROM ruby:3.1.2-alpine

# install rails dependencies
RUN apk add --update --no-cache build-base libpq-dev

# set base env vars
ENV NODE_ENV production
ENV RAILS_ENV production

# create a folder /app in the docker container and go into that folder
RUN mkdir /app
WORKDIR /app

# Copy the Gemfile and Gemfile.lock from app root directory into the /app/ folder in the docker container
COPY Gemfile /app/Gemfile
COPY Gemfile.lock /app/Gemfile.lock

# Install bundler
RUN gem install bundler:2.2.33

# Run bundle install to install gems inside the gemfile
RUN bundle config set --local without 'development test'
RUN bundle config set --local with 'production'
RUN bundle install --no-cache

# Install node and js dependencies
RUN apk add --update --no-cache nodejs=16.20.0-r0 npm

# Install yarn
RUN npm install -g yarn

# Copy the package.json and lockfile
COPY package.json /app/package.json
COPY yarn.lock /app/yarn.lock

# Install node dependencies
RUN yarn install --prod

# Copy the whole app
COPY . /app

# Compile frontend assets
RUN bin/rails assets:precompile

EXPOSE 3000
CMD ["bundle", "exec", "puma", "-C", "config/puma.rb"]
